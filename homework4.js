// ВАРІАНТ 1
// 1 - Ініціалізація змінної i: змінна i ініціалізується зі значенням 1
// 2 - Перевірка умови i <= rows1: перевіряється, чи i <= rows1
// 3 - Внутрішній цикл for: змінна j ініціалізується зі значенням 1
// Потім цикл виконується, додаючи symbol1 до рядка row, поки j <= i
// Кожна ітерація внутрішнього циклу формує частину трикутника для поточного рядка
// 4 - Виведення рядка в консоль: рядок row виводиться в консоль
// 5 - Інкремент i: змінна i збільшується на 1
// 6 - Повторення кроків 2-9: повторюється до тих пір, поки i не стане більше rows1

function drawTriangle1(rows1, symbol1) {
    for (var i = 1; i <= rows1; i++) {
        var row = '';
        for (var j = 1; j <= i; j++) {
            row += symbol1;
        }
        console.log(row);
    }
}
drawTriangle1(9, '@');

// ВАРІАНТ 2
// 1 - Ініціалізація змінних i та j: змінні i та j ініціалізуються зі значенням 1
// 2 - Перевірка умови циклу while: перевіряється, чи i <= rows2
// 3 - Внутрішній цикл while: змінна j ініціалізується зі значенням 1
// Потім цикл виконується, додаючи symbol2 до рядка row, поки j <= i
// Кожна ітерація внутрішнього циклу формує частину трикутника для поточного рядка
// 4 - Виведення рядка в консоль: рядок row виводиться в консоль
// 5 - Інкремент i: змінна i збільшується на 1.
// 6 - Повторення кроків 2-9: ці кроки повторюються до тих пір, поки i не стане більше rows2

function drawTriangle2(rows2, symbol2) {
    var i = 1;
    while (i <= rows2) {
        var row = '';
        var j = 1;
        while (j <= i) {
            row += symbol2;
            j++;
        }
        console.log(row);
        i++;
    }
}
drawTriangle2(7, '#');
